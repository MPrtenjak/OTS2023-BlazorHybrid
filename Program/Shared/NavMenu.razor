@implements IDisposable

@inject NavigationManager navManager

<h6>OTS2023 - Blazor Hybrid - Prtenjak</h6>

<hr />

<h1 class="text-center">@caption</h1>

<hr />

<div class="nav-scrollable">
  <nav class="flex-column">
    <div class="nav-item px-3">
      <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
        <span class="oi oi-home" aria-hidden="true"></span> Home
      </NavLink>
    </div>
    <div class="nav-item px-3">
      <NavLink class="nav-link" href="counter">
        <span class="oi oi-plus" aria-hidden="true"></span> Counter
      </NavLink>
    </div>
  </nav>
</div>

@code {
  private string caption = "";

  private string[] pages = new string[] {
    "/",
    "counter"
  };
  private int pageIndex = 0;

  protected override void OnInitialized()
  {
    base.OnInitialized();
    messageBroker.CaptionChangedEvent += CaptionChanged;
    messageBroker.PrevPageEvent += MoveToPrevPage;
    messageBroker.NextPageEvent += MoveToNextPage;
  }

  public void Dispose()
  {
    messageBroker.CaptionChangedEvent -= CaptionChanged;
    messageBroker.PrevPageEvent -= MoveToPrevPage;
    messageBroker.NextPageEvent -= MoveToNextPage;
  }

  private void CaptionChanged(object? sender, PageCaptionArgs pca)
  {
    caption = pca.Caption;
    StateHasChanged();
  }

  private void MoveToPrevPage(object? sender, EventArgs args)
  {
    DecrementPage();
    StateHasChanged();
    ShowPage();
  }

  private void MoveToNextPage(object? sender, EventArgs args)
  {
    IncrementPage();
    StateHasChanged();
    ShowPage();
  }

  private void IncrementPage()
  {
    pageIndex = (pageIndex >= pages.Length - 1)
      ? 0 /* pages.Length - 1 */
      : pageIndex + 1;
  }

  private void DecrementPage()
  {
    pageIndex = (pageIndex > 0)
      ? pageIndex - 1
      : 0;
  }

  private void ShowPage()
  {
    navManager.NavigateTo(pages[pageIndex]);
  }
}
